[{"/home/pupkinlangford/odin/blog/client-writer/src/index.tsx":"1","/home/pupkinlangford/odin/blog/client-writer/src/reportWebVitals.ts":"2","/home/pupkinlangford/odin/blog/client-writer/src/App.tsx":"3","/home/pupkinlangford/odin/blog/client-writer/src/components/Navbar.tsx":"4","/home/pupkinlangford/odin/blog/client-writer/src/components/PostList.tsx":"5","/home/pupkinlangford/odin/blog/client-writer/src/components/Login.tsx":"6","/home/pupkinlangford/odin/blog/client-writer/src/apiFunctions.ts":"7","/home/pupkinlangford/odin/blog/client-writer/src/components/PostPreview.tsx":"8","/home/pupkinlangford/odin/blog/client-writer/src/components/Post.tsx":"9"},{"size":500,"mtime":1610585241215,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1610585241219,"results":"12","hashOfConfig":"11"},{"size":1284,"mtime":1611611112209,"results":"13","hashOfConfig":"11"},{"size":579,"mtime":1611264820695,"results":"14","hashOfConfig":"11"},{"size":1290,"mtime":1611613224525,"results":"15","hashOfConfig":"11"},{"size":2032,"mtime":1611332198594,"results":"16","hashOfConfig":"11"},{"size":787,"mtime":1611610115393,"results":"17","hashOfConfig":"11"},{"size":838,"mtime":1611613305997,"results":"18","hashOfConfig":"11"},{"size":1144,"mtime":1611612859117,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1k6kn3b",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/home/pupkinlangford/odin/blog/client-writer/src/index.tsx",[],["42","43"],"/home/pupkinlangford/odin/blog/client-writer/src/reportWebVitals.ts",[],"/home/pupkinlangford/odin/blog/client-writer/src/App.tsx",["44"],"import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, useHistory, Redirect} from 'react-router-dom';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Navbar from './components/Navbar';\nimport PostList from './components/PostList';\nimport Login from './components/Login';\nimport Post from './components/Post';\n\n\nfunction App() {\n\n  const [user, setUser] = useState<string | null>(localStorage.getItem('username'));\n\n  const handleUser = (user: string) => setUser(user);\n  useEffect(() => {\n    if(user == null) {\n      localStorage.removeItem('username');\n    } else {\n      localStorage.setItem('username', user as string);\n    }\n  }, [user]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar user={user} />\n        <Switch>\n          <Route exact path=\"/\">\n            <PostList/>\n          </Route>\n          <Route path=\"/posts/:id\">\n            <Post/>\n          </Route>\n          <Route exact path=\"/login\">\n            <Login handleUser={handleUser}/>\n          </Route>\n          <Route exact path=\"/logout\" render={() => {\n            localStorage.clear();\n            setUser(null);\n            return <Redirect to=\"/\" />\n          }}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/pupkinlangford/odin/blog/client-writer/src/components/Navbar.tsx",[],"/home/pupkinlangford/odin/blog/client-writer/src/components/PostList.tsx",["45","46"],"import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport \"./PostList.css\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {getPosts} from '../apiFunctions';\nimport { IPost } from \"../types\";\nimport PostPreview from \"./PostPreview\";\nimport Loader from \"react-loader-spinner\";\n\ninterface PostListProps {\n\n}\n\nconst PostList = (props: PostListProps) => {\n    const [posts, setPosts] = useState<IPost[]>([]);\n    \n    const history = useHistory();\n\n    useEffect(() => {\n        const getAllPosts = async () => {\n            const allPosts = await getPosts();\n            console.log(allPosts);\n            setPosts(allPosts);\n        }\n        if (!localStorage.getItem('token')) {\n            history.push('/login');\n        } else {\n            getAllPosts();\n        }\n    });\n\n    return ( posts.length ?\n        <div className=\"page\">\n            <ul>\n                \n                {posts.map(post => {\n                   return <li><PostPreview post={post}/></li>\n                })}\n            </ul>\n        </div>\n        : \n            <Loader\n            className=\"page\"\n            type=\"TailSpin\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={2000}\n            />\n    );\n\n};\n\nexport default PostList;\n","/home/pupkinlangford/odin/blog/client-writer/src/components/Login.tsx",[],"/home/pupkinlangford/odin/blog/client-writer/src/apiFunctions.ts",[],"/home/pupkinlangford/odin/blog/client-writer/src/components/PostPreview.tsx",[],"/home/pupkinlangford/odin/blog/client-writer/src/components/Post.tsx",["47","48","49"],"import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport \"./PostList.css\";\nimport {Link, useHistory, useParams} from \"react-router-dom\";\nimport {getPost} from '../apiFunctions';\nimport { IPost } from \"../types\";\nimport Loader from \"react-loader-spinner\";\n\n// Need to add comments\nconst Post = () => {\n    const { id } = useParams<{id: string}>();\n    const [post, setPost] = useState<IPost | null>();\n\n    useEffect(() => {\n        const getPostById = async () => {\n            const p = await getPost(id);\n            setPost(p);\n        }\n        getPostById();\n    },[id]);\n    \n    return (\n        post ?\n        <div className=\"page post\">\n            <div className=\"title\">{post.title}</div>\n            <div className=\"byline\">{\"by \" + post.author.username}</div>\n            <div className=\"dateline\">{post.format_date}</div>\n            <div className=\"snippet\">{post.snippet}</div>\n        </div>\n        :   <Loader\n            className=\"page\"\n            type=\"TailSpin\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={1000}\n            />);\n}\n\nexport default Post;\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":49,"nodeType":"56","messageId":"57","endLine":2,"endColumn":59},{"ruleId":"54","severity":1,"message":"58","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":27},{"ruleId":"54","severity":1,"message":"59","line":3,"column":9,"nodeType":"56","messageId":"57","endLine":3,"endColumn":13},{"ruleId":"54","severity":1,"message":"58","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":27},{"ruleId":"54","severity":1,"message":"59","line":3,"column":9,"nodeType":"56","messageId":"57","endLine":3,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":3,"column":15,"nodeType":"56","messageId":"57","endLine":3,"endColumn":25},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'ChangeEvent' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]